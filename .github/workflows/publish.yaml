name: Deploy to Cloudflare Pages

# Trigger on push to main branch and pull requests to main
on:
  push:
    branches:
      - main
      - main-dist
  pull_request:
    branches:
      - main
      - main-dist
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install D2
        run: curl -fsSL https://d2lang.com/install.sh | sh -s -- --tala

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Setup Python for importing docs
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.6.3

      - name: Setup submodules
        run: git submodule update --init


      - name: Install dependencies
        run: pnpm install

      - name: Build the project
        run: pnpm run build
        env:
          TSTRUCT_TOKEN: ${{ secrets.TSTRUCT_TOKEN }}
          PUBLIC_GTM_ID: ${{ secrets.PUBLIC_GTM_ID }}

      - name: Publish to Cloudflare Pages
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages deploy dist --project-name=${{ secrets.CF_PROJECT_NAME }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Capture PR Information
        id: pr_info
        if: github.event_name == 'pull_request'
        run: |
          echo "::set-output name=pr_id::${{ github.event.pull_request.number }}"
          echo "::set-output name=pr_title::${{ github.event.pull_request.title }}"

      - name: Post to Slack
        id: slack
        if: github.event_name == 'pull_request'
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "pr_id": "${{ steps.pr_info.outputs.pr_id }}",
              "pr_title": "${{ steps.pr_info.outputs.pr_title }}",
              "preview_url": "${{ steps.deploy.outputs.deployment-url }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_PR_WEBHOOK_URL }}
