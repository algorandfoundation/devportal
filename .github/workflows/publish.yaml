name: Deploy to Cloudflare Pages

# Trigger on push to main branch and pull requests to main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install Dependencies
      - name: Install D2
        run: curl -fsSL https://d2lang.com/install.sh | sh -s --

      # Step 3: Set up Node.js (used by Astro)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Specify the required Node.js version

      # Step 4: Install pnpm
      - name: Install pnpm
        run: |
          npm install -g pnpm

      # Step 5: Install dependencies using pnpm
      - name: Install dependencies
        run: pnpm install

      # Step 6: Build the Astro project
      - name: Build the project
        run: pnpm run build

      # Step 7: Deploy to Cloudflare Pages and capture the Preview URL
      - name: Deploy to Cloudflare Pages
        id: deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: |
          npx wrangler pages deploy ./dist --project-name ${{ secrets.CF_PROJECT_NAME }} --branch ${{ github.head_ref || github.ref_name }} --commit-hash ${{ github.sha }} > deployment_output.txt
          DEPLOYMENT_URL=$(grep -o 'https://[^"]*.pages.dev' deployment_output.txt | head -n 1)
          echo "::set-output name=preview_url::$DEPLOYMENT_URL"

      # Step 8: Capture PR Information (PR ID and Title)
      - name: Capture PR Information
        id: pr_info
        if: github.event_name == 'pull_request'
        run: |
          echo "::set-output name=pr_id::${{ github.event.pull_request.number }}"
          echo "::set-output name=pr_title::${{ github.event.pull_request.title }}"

      # Step 9: Post the Preview URL, PR ID, and PR Title to Slack
      - name: Post to Slack
        id: slack
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {
              "pr_id": "${{ steps.pr_info.outputs.pr_id }}",
              "pr_title": "${{ steps.pr_info.outputs.pr_title }}",
              "preview_url": "${{ steps.deploy.outputs.preview_url }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_PR_WEBHOOK_URL }}
