---
import ArcsTable from './ArcsTable.astro';
// Fetch all Markdown files from the arcs directory
const markdownFiles = import.meta.glob(
  '/src/content/docs/standards/arcs/*.md',
  { eager: true },
);

// Extract frontmatter and organize data
const arcsData = Object.values(markdownFiles).map(file => ({
  // @ts-expect-error, this should be properly typed at a later date
  ...file.frontmatter,
}));

// Categorize arcs based on their status
const livingArcs = arcsData.filter(arc => arc.status === 'Living');
const finalArcs = arcsData.filter(arc => arc.status === 'Final');
const lastCallArcs = arcsData.filter(arc => arc.status === 'Last Call');
const withdrawnArcs = arcsData.filter(arc => arc.status === 'Withdrawn');

// Export the categorized data to make it accessible in the template below
export { livingArcs, finalArcs, lastCallArcs, withdrawnArcs };
---

<article>
  <!-- Living Arcs Section -->
  <ArcsTable title='Living Arcs' data={livingArcs} />

  <!-- Final Arcs Section -->
  <ArcsTable title='Final Arcs' data={finalArcs} />

  <!-- Last Call Arcs Section -->
  <ArcsTable title='Last Call Arcs' data={lastCallArcs} />

  <!-- Withdrawn Arcs Section -->
  <ArcsTable title='Withdrawn Arcs' data={withdrawnArcs} />
</article>
